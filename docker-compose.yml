version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: ao-platform-db
    environment:
      - POSTGRES_DB: ${POSTGRES_DB:-ao_platform}
      - POSTGRES_USER: ${POSTGRES_USER:-ao_user}
      - POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-SuperStrongPassword159}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - ao-network

  redis:
    image: redis:7-alpine
    container_name: ao-platform-redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - ao-network

  app:
    build: .
    container_name: ao-platform-backend
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER:-ao_user}:${POSTGRES_PASSWORD:-SuperStrongPassword159}@postgres:5432/${POSTGRES_DB:-ao_platform}
      - JWT_SECRET=${JWT_SECRET}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - ao-network
    volumes:
      - uploads:/app/uploads

  nginx:
    image: nginx:alpine
    container_name: ao-platform-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - ao-network

volumes:
  postgres_data:
  uploads:

networks:
  ao-network:
    driver: bridge
